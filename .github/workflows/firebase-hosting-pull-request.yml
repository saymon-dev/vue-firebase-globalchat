name: Preview Deploy to Firebase Hosting on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_preview:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Clonar el repositorio
      - uses: actions/checkout@v4

      # Paso 2: Establecer las variables de entorno desde los secretos de GitHub
      - name: Set up Firebase environment variables
        run: |
          echo "VUE_APP_FIREBASE_API_KEY=${{ secrets.VUE_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "VUE_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.VUE_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "VUE_APP_FIREBASE_PROJECT_ID=${{ secrets.VUE_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "VUE_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.VUE_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "VUE_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VUE_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "VUE_APP_FIREBASE_APP_ID=${{ secrets.VUE_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "VUE_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.VUE_APP_FIREBASE_MEASUREMENT_ID }}" >> $GITHUB_ENV

      # Paso 3: Instalar dependencias
      - run: npm install

      # Paso 4: Construir la aplicación
      - run: npm run build

      # Paso 5: Desplegar la versión previa en un canal de previsualización de Firebase Hosting
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseToken: ${{ secrets.FIREBASE_TOKEN }}  # Usa tu token de Firebase para autenticar el despliegue
          projectId: vue-chat-hyl  # Reemplaza con el ID de tu proyecto de Firebase
          channelId: pr-${{ github.event.number }}  # Crea un canal de previsualización único para cada PR
          expireTime: 7d  # Opcional: Configura un tiempo de expiración para el canal de previsualización (7 días)
